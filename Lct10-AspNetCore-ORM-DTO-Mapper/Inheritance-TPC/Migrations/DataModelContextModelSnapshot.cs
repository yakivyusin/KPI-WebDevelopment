// <auto-generated />
using Inheritance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inheritance.Migrations
{
    [DbContext(typeof(DataModelContext))]
    partial class DataModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Inheritance.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Inheritance.Entities.Cat", b =>
                {
                    b.HasBaseType("Inheritance.Entities.Animal");

                    b.Property<string>("MeowSound")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Cat");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Garfield",
                            MeowSound = "Lasagna!"
                        });
                });

            modelBuilder.Entity("Inheritance.Entities.Dog", b =>
                {
                    b.HasBaseType("Inheritance.Entities.Animal");

                    b.Property<string>("BarkSound")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Dog");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Patron",
                            BarkSound = "Glory to Ukraine!"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
